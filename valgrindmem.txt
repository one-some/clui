Hello from claire
Starting clangd...
[lsp] hey from lsp thread
Payload: {"id": 0, "jsonrpc": "2.0", "method": "initialize", "params": {"capabilities": {"window": {"workDoneProgress": true}}, "clientInfo": {"name": "claires lsp client", "version": "0.000000001"}, "processId": null, "rootUri": "file:///home/susan/clui"}}
Payload: {"jsonrpc": "2.0", "method": "initialized", "params": {}}
Payload: {"jsonrpc": "2.0", "method": "textDocument/didOpen", "params": {"textDocument": {"languageId": "cpp", "text": "#include \"assert.h\"\n#include <stdio.h>\n#include \"Dep/raylib.h\"\n#include <cstdint>\n#include <vector>\n#include <iostream>\n#include <memory>\n#include <ranges>\n#include <unistd.h>\n#include \"FrameManager/FrameManager.h\"\n#include \"Claire/JSON/JSON.h\"\n#include \"Claire/Utilization.h\"\n\n#include \"UI/Container/Container.h\"\n#include \"color.h\"\n#include \"cpp.h\"\n#include \"LSPClient/LSPClient.h\"\n#include \"Claire/File.h\"\n#include \"Claire/String.h\"\n#include \"Actions/EditorActions.h\"\n#include \"UI/Stack/Stack.h\"\n#include \"UI/TabContainer/TabContainer.h\"\n#include \"UI/IssueContainer/IssueContiainer.h\"\n#include \"fontglobal.h\"\n#include \"terminal.h\"\n#include \"UI/FileList/FileList.h\"\n#include <fcntl.h>\n#include \"log.h\"\n\nstd::unique_ptr<RayLib::Font, RLFontDeleter> Font::the_raw;\n\nvoid reload_self(int argc, char *argv[], char *envp[]) {\n    printf(\"ROFL RELOAD\n\");\n\n    int fd = open(\"/proc/self/exe\", O_RDONLY | O_CLOEXEC);\n    ASSERT(fd != -1, \"Coudln't open self\");\n\n    std::vector<char*> args;\n    for (int i = 0; i < argc;  i++) {\n        args.push_back(argv[i]);\n    }\n    args.push_back(NULL);\n\n    fexecve(fd, args.data(), envp);\n\n    ASSERT(false, \"FAILED TO SHIFT EXEC\");\n}\n\nint main(int argc, char *argv[], char *envp[]) {\n    LogContainer::swallow_stdout();\n\n    printf(\"Hello from claire\n\");\n    \n    LSPClient::the().init();\n\n    RayLib::SetTraceLogLevel(RayLib::LOG_ERROR);\n    RayLib::SetConfigFlags(RayLib::FLAG_WINDOW_RESIZABLE);\n    RayLib::InitWindow(500, 500, \"clui test\");\n\n    auto icon = RayLib::SmartImage(\"claire_head.png\");\n    RayLib::SetWindowIcon(icon.image);\n\n    RayLib::SetTargetFPS(60);\n    uint64_t frames = 0;\n    \n    auto root = Container();\n    FrameManager::root_container = &root;\n    root.size->set_raw({ 500, 500 });\n\n    // Apparently ? needs escaping... huh.\n    auto ram_usage_label = root.create_child<TextLabel>(\"(\\?\\?\\?)\");\n    ram_usage_label->color = Colors::FG.to_ray();\n    ram_usage_label->position->y_strategy = YPositionStrategy::BOTTOM;\n    ram_usage_label->font_size = 16;\n\n    auto sidebar_cont = root.create_child<HStack>();\n    sidebar_cont->allow_user_resize = true;\n    sidebar_cont->size->strategy_x = SizeStrategy::EXPAND_TO_FILL;\n    sidebar_cont->size->strategy_y = SizeStrategy::EXPAND_TO_FILL;\n\n        auto file_list = sidebar_cont->create_child<FileList>(\"./\");\n        file_list->size->strategy_x = SizeStrategy::FORCE;\n        file_list->size->set_x(200);\n\n        auto tabs_terminal_stack = sidebar_cont->create_child<VStack>();\n        tabs_terminal_stack->debug_name = String(\"tabs_terminal_stack\");\n        tabs_terminal_stack->allow_user_resize = true;\n        tabs_terminal_stack->size->strategy_x = SizeStrategy::EXPAND_TO_FILL;\n        tabs_terminal_stack->size->strategy_y = SizeStrategy::EXPAND_TO_FILL;\n\n            auto tabs = tabs_terminal_stack->create_child<TabContainer>();\n            tabs->size->strategy_x = SizeStrategy::EXPAND_TO_FILL;\n            tabs->size->strategy_y = SizeStrategy::EXPAND_TO_FILL;\n            EditorActions::register_primary_tab_container(tabs);\n            EditorActions::open_file_in_new_tab(\"src/main.cpp\");\n            // EditorActions::open_file_in_new_tab(\"src/textedit.cpp\");\n            \n            auto bottom_tabs = tabs_terminal_stack->create_child<TabContainer>();\n            bottom_tabs->debug_name = String(\"bottom_tabs\");\n            bottom_tabs->size->strategy_y = SizeStrategy::FORCE;\n            b